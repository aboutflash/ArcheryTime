group 'de.aboutflash.archerytime'

apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

mainClassName = 'de.aboutflash.archerytime.ArcheryTime'

repositories {
  mavenCentral()
}

tasks.withType(Exec) {
  doFirst {
    println commandLine
  }
}


dependencies {
  // Internal dependencies

  // Utilities
  // For logging
  compile REFLECTIONS_DEP
  compile COMMONS_LANG3_DEP

  // TOOLING DEPENDENCIES
  compile JSASS_DEP
  testCompile HAMCREST_CORE_DEP
  testCompile JUNIT_DEP
  testCompile LOGBACK_CLASSIC_DEP
  testCompile MOCKITO_CORE_DEP
  testCompile OPENJFX_MONOCLE_DEP
  testCompile TESTFX_CORE_DEP
  testCompile TESTFX_JUNIT_DEP
  testCompile TRUTH_DEP

// https://mvnrepository.com/artifact/io.bit3/jsass
  compile group: 'io.bit3', name: 'jsass', version: '5.5.3'
}

/**
 * Ensure default
 */
compileJava {
  options.encoding = "UTF-8"
}

///**
// * Compile scss to css.
// */
//task compileSCSS {
//  final URI inputFile = file("src/main/java/de/aboutflash/archerytime/client/main/main.scss").toURI()
//  final URI outputFile = file("src/main/generated/css/main.css").toURI()
//
//  final Compiler compiler = new Compiler()
//  final Options options = new Options()
//  final Output output = compiler.compileFile(inputFile, outputFile, options)
//
//  // Remove the charset declaration that confuses the JavaFX CSS parser.
//  final String css = output.getCss().replace("@charset \"UTF-8\";", "")
//
//  // Note: At this point, outputFile does not yet exist. So write it now...
//  def target = Paths.get(outputFile)
//  Files.createDirectories(target.parent)
//  Files.write(target, css.getBytes(StandardCharsets.UTF_8))
//
//}

/**
 * compass watcher task.
 *
 * Start compassWatch with:
 * `./gradlew compassWatch -t`
 */
task compassWatch {
  doLast {
    compileSCSS
  }
}

compassWatch {
  inputs.files fileTree(dir: 'src/main/java', include: '**/*.scss')
}

assemble.doLast {
  compileSCSS
}
